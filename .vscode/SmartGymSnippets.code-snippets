{
	// Place your SmartGym workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Import WorkoutTypos":{
		"scope": "javascript,typescript, typescriptreact",
		"prefix": "workouttypos",
		"body": [
			"import { Workout, Exercise, WorkoutSet } from '@/constants/types/workout-types';"

		],
		"description": "Import Workout, Exercise and WorkoutSet types from WorkoutTypos"
	},
	"Import useWorkoutContext":{
		"scope": "javascript,typescript, typescriptreact",
		"prefix": "useworkoutcontext",
		"body": [
			"import { useWorkoutContext } from '@/hooks/WorkoutContext';",
			"const { loadUnit, timeUnit, showWorkoutSetCheckbox } = useWorkoutContext()"
		],
		"description": "Import useWorkoutContext hook from WorkoutContext"
	},
	"Import WorkoutMetrics":{
		"scope": "javascript,typescript, typescriptreact",
		"prefix": "workoutmetrics",
		"body": [
			"import { calculateTotalSets } from '@/core/WorkoutMetrics';"

		],
		"description": "Import calculateTotalSets function from WorkoutMetrics"
	},
	"helperDb":{
		"scope": "javascript,typescript, typescriptreact",
		"prefix": "helperdb",
		"body": [
			"import * as helperDB from '@/helperDB'"

		],
		"description": "Import all helperDB functions"
	},
}